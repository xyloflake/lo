name: build runtime
on: [push, pull_request, workflow_dispatch]

defaults:
  run:
    shell: bash

jobs:
  build-mac:
    name: mac
    runs-on: macos-12
    strategy:
      fail-fast: false
      matrix:
        platform: [x64, arm64]
    steps:
      - uses: actions/checkout@v3
      - name: compile runtime
        run: |
          make ARCH=${{ matrix.platform }} lo
#          ./lo build binding core
      - name: check
        if: ${{ matrix.platform == 'x64' }}
        run: |
          make check
          brew install libffi lz4 zstd jsonschema
          LO_PREFIX=/usr/local/opt ./lo test/build.js
      - name: upload runtime artifact
        uses: actions/upload-artifact@v3
        with:
          path: ${{ github.workspace }}/lo
          name: lo-mac-${{ matrix.platform }}

  build-linux-x64:
    name: linux-x64
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        platform: [x64]
    steps:
      - uses: actions/checkout@v3
      - name: install libcurl
        run: |
          sudo apt-get update -y
          sudo apt-get install -qy libcurl4-openssl-dev
      - name: compile
        run: |
          make lo
#          ./lo build binding core
      - name: check
        run: |
          make check
          sudo apt-get install -qy libffi-dev liblz4-dev libseccomp-dev libsqlite3-dev libtcc-dev zlib1g-dev tcc
          ./lo test/build.js
      - name: upload artifact
        uses: actions/upload-artifact@v3
        with:
          path: ${{ github.workspace }}/lo
          name: lo-linux-x64

  build-linux-arm:
    name: linux-arm64
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        platform: [x64]
    steps:
      - uses: actions/checkout@v3
      - name: install libcurl
        run: |
          sudo apt-get install -qy libcurl4-openssl-dev
      - name: install arm64 tools
        run: |
          sudo apt-get install -qy binutils-aarch64-linux-gnu gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
      - name: compile
        run: |
          make ARCH=arm64 C=aarch64-linux-gnu-gcc CC=aarch64-linux-gnu-g++ lo
      - name: upload artifact
        uses: actions/upload-artifact@v3
        with:
          path: ${{ github.workspace }}/lo
          name: lo-linux-arm64
  
  build-windows:
    name: windows
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        platform: [x64]
    steps:
      - uses: actions/checkout@v3
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.platform }}
      - name: compile
        run: |
          make BINDINGS= lo.exe
      - name: check
        run: |
          make check
      - name: upload artifact
        uses: actions/upload-artifact@v3
        with:
          path: ${{ github.workspace }}/lo.exe
          name: lo.exe
